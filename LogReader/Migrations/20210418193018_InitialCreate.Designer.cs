// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using LogReader.Models;

namespace LogReader.Migrations
{
    [DbContext(typeof(MessagingContext))]
    [Migration("20210418193018_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "5.0.5");

            modelBuilder.Entity("LogReader.Models.FTSMessage", b =>
                {
                    b.Property<int>("RowId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Match")
                        .HasColumnType("TEXT")
                        .HasColumnName("FTSMessage");

                    b.Property<string>("MessageText")
                        .HasColumnType("TEXT");

                    b.Property<double?>("Rank")
                        .HasColumnType("REAL");

                    b.HasKey("RowId");

                    b.ToTable("FTSMessages");
                });

            modelBuilder.Entity("LogReader.Models.Message", b =>
                {
                    b.Property<int>("RowId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("EventDateTime")
                        .HasColumnType("TEXT");

                    b.Property<int>("EventId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Sequence")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Severity")
                        .HasColumnType("TEXT");

                    b.Property<string>("SourceName")
                        .HasColumnType("TEXT");

                    b.HasKey("RowId");

                    b.ToTable("Messages");
                });

            modelBuilder.Entity("LogReader.Models.FTSMessage", b =>
                {
                    b.HasOne("LogReader.Models.Message", "Message")
                        .WithOne("FTSMessage")
                        .HasForeignKey("LogReader.Models.FTSMessage", "RowId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Message");
                });

            modelBuilder.Entity("LogReader.Models.Message", b =>
                {
                    b.Navigation("FTSMessage");
                });
#pragma warning restore 612, 618
        }
    }
}
